name: "Copilot Setup Steps"

# This workflow is executed by GitHub before Copilot starts working in its
# ephemeral environment. It should live on the default branch to be picked up
# by Copilot. Keep the job name exactly `copilot-setup-steps`.
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # Job name MUST be `copilot-setup-steps` per GitHub docs
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      # minimal permission required to check out the repository
      contents: read
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Poetry
        run: python -m pip install poetry==1.9.6

      - name: Install Python dependencies (Poetry)
        run: |
          # If pyproject.toml exists, install dependencies so Copilot doesn't have
          # to download them at runtime. Use --no-root so the package itself
          # isn't installed into the environment (matches repo bootstrap docs).
          if [ -f pyproject.toml ]; then
            poetry install --no-root --no-interaction --no-ansi
          else
            echo "No pyproject.toml found - skipping Poetry install"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found - skipping npm install"
          fi

      - name: Verify basic tools
        run: |
          echo "Python: $(python --version)"
          echo "Poetry: $(poetry --version || true)"
          echo "Node: $(node --version || true)"
          echo "npm: $(npm --version || true)"

      - name: Verify bundled linter binaries
        run: |
          echo "Checking bundled linter binaries for offline support..."
          if [ -x "tools/bin/hadolint-linux-x86_64" ]; then
            echo "✓ hadolint (Linux x86_64) available"
          else
            echo "✗ hadolint (Linux x86_64) missing"
          fi
          if [ -x "tools/bin/actionlint-linux-x86_64" ]; then
            echo "✓ actionlint (Linux x86_64) available"
          else
            echo "✗ actionlint (Linux x86_64) missing"
          fi
